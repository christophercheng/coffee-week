{"version":3,"sources":["reducers/initialState.js","reducers/usersReducer.js","actions/actionTypes.js","reducers/pairingsReducer.js","reducers/filterReducer.js","reducers/rootReducer.js","store/configureStore.js","api/usersAPI.js","actions/helpers.js","actions/index.js","components/pages/pageSections/common/pageSection.styles.js","components/pages/pageSections/common/Header/Header.component.js","components/pages/pageSections/common/Header/index.js","components/pages/pageSections/common/Header/Header.connect.js","components/pages/pageSections/common/Toolbar/Toolbar.styles.js","components/pages/pageSections/common/Toolbar/Toolbar.component.js","components/pages/pageSections/common/Toolbar/index.js","components/pages/pageSections/common/Toolbar/Toolbar.connect.js","components/pages/pageSections/PairingBlock/PairingBlock.styles.js","components/pages/pageSections/PairingBlock/index.js","components/pages/pageSections/PairingBlock/PairingBlock.component.js","components/pages/pageSections/PairingsList/PairingsList.styles.js","components/pages/pageSections/PairingsList/PairingsList.component.js","components/pages/pageSections/PairingsList/index.js","components/pages/pageSections/PairingsList/PairingsList.connect.js","components/pages/HomePage/index.js","components/pages/HomePage/HomePage.component.js","components/pages/ErrorBoundaryPage/index.js","components/App/App.style.js","components/App/index.js","serviceWorker.js","index.js"],"names":["initialState","users","pairings","filter","selectedCity","selectedDepartments","engineering","usersReducer","state","arguments","length","undefined","action","type","pairingsReducer","filterReducer","console","log","Object","objectSpread","departments","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunk","fetchUsers","location","locationParam","concat","fetch","then","response","json","catch","error","makeRandomPairings","giverUserIds","storeFilter","keys","guid","department","applyDepartmentFilter","receiverUserIds","toConsumableArray","sort","a","b","Math","random","giverId","shift","receiverId","pop","loadUsersSuccess","selectCity","city","dispatch","getState","newFilter","makePairings","changeDeptSelection","defineProperty","sizes","desktop","tablet","mobile","media","reduce","acc","label","css","_templateObject","apply","BarSection","styled","div","_templateObject2","_templateObject3","MainSection","_templateObject4","_templateObject5","SectionContainer","_templateObject6","_templateObject7","HeaderSection","_ref","title","react_default","createElement","connect","Toolbar","Toolbar_styles_templateObject","Toolbar_styles_templateObject2","SelectLabel","span","Toolbar_styles_templateObject3","Filter","Toolbar_styles_templateObject4","SharedSectionContainer","Toolbar_styles_templateObject5","ToolbarSection","onCityChange","value","target","_this","props","handleFilterDept","_ref2","renderSelectOption","key","renderCheckbox","dept","selected","checked","onChange","render","Toolbar_styles_SectionContainer","cities","map","React","Component","bindActionCreators","Block","PairingBlock_styles_templateObject","PairingBlock_styles_templateObject2","PairingBlock_styles_templateObject3","Divider","PairingBlock_styles_templateObject4","Name","PairingBlock_styles_templateObject5","PairingBlock","giverInfo","receiverInfo","getName","first","last","name","SharedMainSection","PairingsList_styles_templateObject","PairingsList_styles_templateObject2","PairingsList_styles_templateObject3","PairingsList_styles_templateObject4","PairingsList","renderPair","pair","pageSections_PairingBlock","phone","this","PairingsList_styles_MainSection","PairingsList_styles_SectionContainer","entries","ConnectedPairingsList","HomePage","Header","common_Toolbar","pageSections_PairingsList","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","children","GlobalStyle","createGlobalStyle","App_style_templateObject","reset","App_style_templateObject2","store","usersServerData","regroupedUsers","groupedUsers","forEach","user","rest","objectWithoutProperties","groupUsers","getDepartments","App","ErrorBoundaryPage","App_style","react_redux_es","BrowserRouter","Route","exact","path","component","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6MAAeA,EAAA,CACbC,MAAO,GACPC,SAAU,GACVC,OAAQ,CACNC,aAAc,KACdC,oBAAqB,CAACC,aAAe,KCO1BC,EATM,WAAwC,IAAvCC,EAAuCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BT,EAAaC,MAAOW,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAOC,MACb,ICL8B,qBDM5B,OAAOD,EAAOX,MAChB,QACE,OAAOO,IEIEM,EATS,WAA2C,IAA1CN,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlCT,EAAaE,SAAUU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjE,OAAQC,EAAOC,MACb,IDJyB,gBCKvB,OAAOD,EAAOV,SAChB,QACE,OAAOM,WCUEO,EAfO,WAAyC,IAAxCP,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCT,EAAaG,OAAQS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE7D,OADAK,QAAQC,IAAI,yBAA0BT,EAAO,mBAAoBI,GACzDA,EAAOC,MACb,IFJwB,gBEKtB,OAAOD,EAAOT,OAChB,IFR8B,qBES5B,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GACFV,EADL,CAEEH,oBAAoBa,OAAAC,EAAA,EAAAD,CAAA,GAAKN,EAAOQ,YAAgBZ,EAAMH,uBAE1D,QACE,OAAOG,ICHEa,EANKC,YAAgB,CAClCrB,QACAC,WACAC,mBCJIoB,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EALQ,kBAAMC,YAC3BP,EAAmCE,EAC/BM,YAAgBC,uCCCPC,EARI,SAAAC,GACjB,IAAMC,EAAgBD,EAAQ,aAAAE,OAAgBF,GAAhB,GAE9B,OAAOG,MADU,8EAAgFF,GAE9FG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BC,MAAM,SAAAC,GAAK,OAAIA,qBC0BPC,EAAqB,SAACxC,EAAOE,GAIxC,IAHA,IAAMD,EAAW,GACXwC,EAVsB,SAACzC,EAAO0C,GAEpC,OADA3B,QAAQC,IAAI,sBAAuBhB,EAAO0C,GACnCzB,OAAO0B,KAAK3C,GAAOE,OAAO,SAAA0C,GAC/B,IAAMC,EAAa7C,EAAM4C,GAAMC,WAC/B,OAAQH,EAAYtC,oBAAoByC,KAMrBC,CAAsB9C,EAAOE,GAC5C6C,EAAkB9B,OAAA+B,EAAA,EAAA/B,CAAIwB,GAAcQ,KAAK,SAACC,EAAEC,GAAH,MAAS,GAAKC,KAAKC,WAC3DZ,EAAahC,QAAQ,CAC1B,IAAM6C,EAAUb,EAAac,QACvBC,EAAcT,EAAgB,KAAOO,EAAWP,EAAgBU,MAAQV,EAAgBQ,QAC9FtD,EAASqD,GAAWE,EAEtB,OAAOvD,GCzBHyD,EAAmB,SAAC1D,EAAOmB,GAAR,MACvB,CACEP,KPjB8B,qBOkB9BZ,QACAmB,gBAISwC,EAAa,SAAAC,GAAI,OAAI,SAACC,EAAUC,GAC3C,IAAMC,EAAS9C,OAAAC,EAAA,EAAAD,CAAA,GACV6C,IAAW5D,OADD,CAEbC,aAAcyD,IAEhBC,EAASG,EAAaF,IAAW9D,MAAM4D,GAAOG,IAC9CF,EAAS,CACPjD,KP5BwB,gBO6BxBV,OAAQ6D,MAICE,EAAsB,SAAApB,GAAU,OAAI,SAACgB,EAAUC,GAC1D/C,QAAQC,IAAI,kBAAmB6B,GAC/B,IAAMtC,EAAQuD,IACN1D,EAAwBG,EAAML,OAA9BE,oBACF2D,EAAS9C,OAAAC,EAAA,EAAAD,CAAA,GACZV,EAAML,OADM,CAEbE,oBAAoBa,OAAAC,EAAA,EAAAD,CAAA,GAAKb,EAANa,OAAAiD,EAAA,EAAAjD,CAAA,GAA4B4B,GAAczC,EAAoByC,OAEnF9B,QAAQC,IAAI,eAAgB+C,GAC5B,IAAM5D,EAAeI,EAAML,OAAOC,aAClC0D,EAAS,CACPjD,KP5CwB,gBO6CxBV,OAAQ6D,IAEVF,EAASG,EAAazD,EAAMP,MAAMG,GAAe4D,IACjDhD,QAAQC,IAAI,iBAAkBT,EAAML,UAIhC8D,EAAe,SAAChE,EAAO+D,GAC3B,MAAO,CACLnD,KPvDyB,gBOwDzBX,SAAUuC,EAAmBxC,EAAO+D,sjCCvDxC,IAAMI,EAAQ,CACZC,QAAS,IACTC,OAAQ,IACRC,OAAQ,KAIGC,EAAQtD,OAAO0B,KAAKwB,GAAOK,OAAO,SAACC,EAAKC,GAMnD,OALAD,EAAIC,GAAS,kBAAaC,cAAbC,IACUT,EAAMO,GAAS,GAChCC,MAAGE,WAAH,EAAArE,aAGCiE,GACN,IAEUK,EAAaC,UAAOC,IAAVC,IAInBV,EAAMD,OAJaY,MAYVC,EAAcJ,kBAAOD,EAAPC,CAAHK,IAGpBb,EAAMD,OAHce,MASXC,EAAmBP,UAAOC,IAAVO,IAMzBhB,EAAMD,OANmBkB,MC5BdC,EARO,SAAAC,GAA2B,IAAzBC,EAAyBD,EAAzBC,MAAOxF,EAAkBuF,EAAlBvF,aAC7B,OACEyF,EAAA1C,EAAA2C,cAACf,EAAD,KACEc,EAAA1C,EAAA2C,cAACP,EAAD,QAAArD,OAAsB0D,EAAtB,MAAA1D,OAAgC9B,EAAhC,QCLSsF,ECQAK,YANS,SAAAvF,GACtB,MAAO,CACLJ,aAAcI,EAAML,OAAOC,eAIhB2F,CAAyBL,ypBCNjC,IAAMM,GAAUhB,kBAAOD,EAAPC,CAAHiB,IAEhBzB,EAAMD,OAFU2B,MAUPC,GAAcnB,UAAOoB,KAAVC,KAKXC,GAAStB,UAAOoB,KAAVG,KAONhB,GAAmBP,kBAAOwB,EAAPxB,CAAHyB,KCiBdC,8MAtCbC,aAAe,SAAAhB,GAA0B,IAAbiB,EAAajB,EAAvBkB,OAAUD,MAC1BE,EAAKC,MAAMnD,WAAWgD,MAGxBI,iBAAmB,SAAAC,GAAyB,IAAZL,EAAYK,EAAtBJ,OAAUD,MAC9B5F,QAAQC,IAAI,gBAAiB2F,GAC7BE,EAAKC,MAAM7C,oBAAoB0C,MAGjCM,mBAAqB,SAAArD,GAAI,OACvBgC,EAAA1C,EAAA2C,cAAA,UAAQqB,IAAKtD,EAAM+C,MAAO/C,GAAOA,MAGnCuD,eAAiB,SAAAC,GACf,IAAMC,EAAWR,EAAKC,MAAM3F,YAAYiG,GACxC,OACExB,EAAA1C,EAAA2C,cAACQ,GAAD,CAAQa,IAAKE,GACXxB,EAAA1C,EAAA2C,cAAA,SAAOjF,KAAK,WAAW+F,MAAOS,EAAME,QAASD,EAAUE,SAAUV,EAAKE,mBACrEK,MAKPI,OAAS,kBACP5B,EAAA1C,EAAA2C,cAACE,GAAD,KACEH,EAAA1C,EAAA2C,cAAC4B,GAAD,KACE7B,EAAA1C,EAAA2C,cAACK,GAAD,iBACAN,EAAA1C,EAAA2C,cAACQ,GAAD,KACET,EAAA1C,EAAA2C,cAAA,UAAQ0B,SAAUV,EAAKH,aAAcC,MAAOE,EAAKC,MAAM3G,cACpD0G,EAAKC,MAAMY,OAAOC,IAAId,EAAKI,sBAG/BhG,OAAO0B,KAAKkE,EAAKC,MAAM3F,aAAawG,IAAId,EAAKM,gDAjCzBS,IAAMC,WCFpBpB,GCgBAX,YAZS,SAAAvF,GACtB,MAAO,CACLmH,OAAQzG,OAAO0B,KAAKpC,EAAMP,OAC1BG,aAAcI,EAAML,OAAOC,aAC3BgB,YAAaZ,EAAML,OAAOE,sBAIH,SAAAyD,GACzB,OAAOiE,YAAmB,CAACnE,aAAYM,uBAAsBJ,IAGhDiC,CAA6CW,wvBCdrD,IAAMsB,GAAQhD,UAAOC,IAAVgD,KAUdzD,EAAMF,OAVQ4D,MAad1D,EAAMD,OAbQ4D,OAmBLC,GAAUpD,UAAOC,IAAVoD,MAMPC,GAAOtD,UAAOoB,KAAVmC,MC3BFC,GCEM,SAAA7C,GAA+B,IAA7B8C,EAA6B9C,EAA7B8C,UAAWC,EAAkB/C,EAAlB+C,aAC1BC,EAAU,SAAA1B,GAAA,IAAE2B,EAAF3B,EAAE2B,MAAOC,EAAT5B,EAAS4B,KAAT,OACdhD,EAAA1C,EAAA2C,cAAA,WAAM8C,EAAN,IAAcC,IAGhB,OACEhD,EAAA1C,EAAA2C,cAACkC,GAAD,KACEnC,EAAA1C,EAAA2C,cAAA,qBACSD,EAAA1C,EAAA2C,cAACwC,GAAD,KAAOK,EAAQF,EAAUK,QAElCjD,EAAA1C,EAAA2C,cAACsC,GAAD,MACAvC,EAAA1C,EAAA2C,cAAA,wBACYD,EAAA1C,EAAA2C,cAACwC,GAAD,KAAOK,EAAQD,EAAaI,2tBCXvC,IAAM1D,GAAcJ,kBAAO+D,EAAP/D,CAAHgE,KAIpBxE,EAAMD,OAJc0E,OAaX1D,GAAmBP,kBAAOwB,EAAPxB,CAAHkE,KAUzB1E,EAAMD,OAVmB4E,OCUdC,8MArBbC,WAAa,SAAAC,GAAQ,IACXrJ,EAAU6G,EAAKC,MAAf9G,MACFwI,EAAYxI,EAAMqJ,EAAK,IACvBZ,EAAezI,EAAMqJ,EAAK,IAChC,OAAOzD,EAAA1C,EAAA2C,cAACyD,GAAD,CAAcpC,IAAKsB,EAAUe,MAAOf,UAAWA,EAAWC,aAAcA,8EAGxE,IACCxI,EAAauJ,KAAK1C,MAAlB7G,SACR,OACE2F,EAAA1C,EAAA2C,cAAC4D,GAAD,KAEKxJ,EAEC2F,EAAA1C,EAAA2C,cAAC6D,GAAD,KAAmBzI,OAAO0I,QAAQ1J,GAAU0H,IAAI6B,KAAKJ,aADrDxD,EAAA1C,EAAA2C,cAAC6D,GAAD,iCAfe9B,IAAMC,WCHlB+B,GCSA9D,YAPS,SAAAvF,GACtB,MAAO,CACLP,MAAOO,EAAMP,MAAMO,EAAML,OAAOC,cAChCF,SAAUM,EAAMN,WAIL6F,CAAyBqD,ICRzBU,GCGE,SAAC/C,GAChB,OACElB,EAAA1C,EAAA2C,cAAA,WACED,EAAA1C,EAAA2C,cAACiE,EAAD,CAAenE,MAAM,gBACrBC,EAAA1C,EAAA2C,cAACkE,GAAD,MACAnE,EAAA1C,EAAA2C,cAACmE,GAAD,QCkBSC,eAzBb,SAAAA,EAAYnD,GAAO,IAAAD,EAAA,OAAA5F,OAAAiJ,EAAA,EAAAjJ,CAAAuI,KAAAS,IACjBpD,EAAA5F,OAAAkJ,EAAA,EAAAlJ,CAAAuI,KAAAvI,OAAAmJ,EAAA,EAAAnJ,CAAAgJ,GAAAI,KAAAb,KAAM1C,KACDvG,MAAQ,CAAE+J,UAAU,GAFRzD,kFAUDtE,EAAOgI,GAEvBxJ,QAAQC,IAAI,mBAAoBuB,EAAOgI,oCAIvC,OAAIf,KAAKjJ,MAAM+J,SAEN1E,EAAA1C,EAAA2C,cAAA,mCAGF2D,KAAK1C,MAAM0D,4DAhBYjI,GAE9B,MAAO,CAAE+H,UAAU,UARK1C,IAAMC,wXCGlC,IAee4C,GAfKC,4BAAHC,KACbC,KASErG,EAAMD,OAVKuG,OCKXC,GAAQpJ,IACdoJ,GAAMjH,SpBPyB,SAACA,EAAUC,GACxC,OAAOhC,IAAaK,KAAK,SAAA4I,GACvB,IAAMC,EDNgB,SAAAhL,GACxB,IAAMiL,EAAe,GASrB,OARAjL,EAAMkL,QAAQ,SAAAC,GAAQ,IACbvI,EAA2BuI,EAA3BvI,KAAMb,EAAqBoJ,EAArBpJ,SAAaqJ,EADNnK,OAAAoK,EAAA,EAAApK,CACckK,EADd,qBAEhBpJ,KAAYkJ,EACdA,EAAalJ,GAAUa,GAAQwI,EAE/BH,EAAalJ,GAAbd,OAAAiD,EAAA,EAAAjD,CAAA,GAA2B2B,EAAOwI,KAG/BH,ECJkBK,CAAWP,EAAgB/K,OAC5CmB,EDMoB,SAAAnB,GAC5B,IAAMmB,EAAc,GAMpB,OALAnB,EAAMkL,QAAQ,SAAAC,GACNA,EAAKtI,cAAc1B,IACvBA,EAAYgK,EAAKtI,aAAY,KAG1B1B,ECbeoK,CAAeR,EAAgB/K,OACnD6D,EAASH,EAAiBsH,EAAgB7J,IAC1C0C,EAASF,EAAWG,IAAW5D,OAAOC,iBACrCmC,MAAM,SAAAC,GACP,MAAMA,MoBEV,IAWeiJ,GAXH,kBACV5F,EAAA1C,EAAA2C,cAAC4F,GAAD,KACE7F,EAAA1C,EAAA2C,cAAC6F,GAAD,MACA9F,EAAA1C,EAAA2C,cAAC8F,EAAA,EAAD,CAAUb,MAAOA,IACflF,EAAA1C,EAAA2C,cAAC+F,EAAA,EAAD,KACEhG,EAAA1C,EAAA2C,cAACgG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAanC,SCNvBoC,QACW,cAA7B1K,OAAOQ,SAASmK,UAEe,UAA7B3K,OAAOQ,SAASmK,UAEhB3K,OAAOQ,SAASmK,SAASC,MACvB,2DCZNC,IAAS5E,OAAO5B,EAAA1C,EAAA2C,cAACwG,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMvK,KAAK,SAAAwK,GACjCA,EAAaC","file":"static/js/main.5caabe4d.chunk.js","sourcesContent":["export default {\n  users: {},\n  pairings: {},\n  filter: {\n    selectedCity: \"ny\",\n    selectedDepartments: {\"engineering\": true}\n  }\n}\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst usersReducer = (state = initialState.users, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_SUCCESS:\n      return action.users;\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","export const LOAD_USERS_SUCCESS = \"LOAD_USERS_SUCCESS\";\nexport const MAKE_PAIRINGS = \"MAKE_PAIRINGS\";\nexport const UPDATE_FILTER= \"UPDATE_FILTER\";","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst pairingsReducer = (state = initialState.pairings, action) => {\n  switch (action.type) {\n    case types.MAKE_PAIRINGS:\n      return action.pairings\n    default:\n      return state;\n  }\n};\n\nexport default pairingsReducer;\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst filterReducer = (state = initialState.filter, action) => {\n  console.log('filter reducer state: ', state, ' filter action: ', action);\n  switch (action.type) {\n    case types.UPDATE_FILTER:\n      return action.filter\n    case types.LOAD_USERS_SUCCESS:\n      return {\n        ...state,\n        selectedDepartments: {...action.departments, ...state.selectedDepartments}\n      }\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {combineReducers} from 'redux';\nimport users from './usersReducer';\nimport pairings from './pairingsReducer';\nimport filter from './filterReducer';\n\nconst rootReducer = combineReducers({\n  users,\n  pairings,\n  filter\n});\n\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst configureStore = () => createStore(\n  rootReducer, /* preloadedState, */ composeEnhancers(\n      applyMiddleware(thunk)\n    ));\n\nexport default configureStore;\n","const fetchUsers = location => {\n  const locationParam = location ? `?location=${location}` : ``;\n  const fetchUrl = 'https://hbc-frontend-challenge.hbccommon.private.hbc.com/coffee-week/users/' + locationParam;\n  return fetch(fetchUrl)\n    .then(response => response.json())\n    .catch(error => error);\n}\n\nexport default fetchUsers;","export const groupUsers = users => {\n  const groupedUsers = {};\n  users.forEach(user => {\n    const {guid, location, ...rest} = user;\n    if (location in groupedUsers) {\n      groupedUsers[location][guid] = rest;\n    } else {\n      groupedUsers[location] = {[guid]: rest};\n    }\n  });\n  return groupedUsers;\n};\n\nexport const getDepartments = users => {\n  const departments = {};\n  users.forEach(user => {\n    if (!(user.department in departments)) {\n      departments[user.department]=false;\n    }\n  });\n  return departments;\n}\n\nconst applyDepartmentFilter = (users, storeFilter) => {\n  console.log(\"apply Dept Filter: \", users, storeFilter);\n  return Object.keys(users).filter(guid => {\n    const department = users[guid].department;\n    return (storeFilter.selectedDepartments[department]);\n  });\n};\n\nexport const makeRandomPairings = (users, filter) => {\n  const pairings = {};\n  const giverUserIds = applyDepartmentFilter(users, filter);\n  const receiverUserIds = [...giverUserIds].sort((a,b) => .5 - Math.random());\n  while (giverUserIds.length) {\n    const giverId = giverUserIds.shift();\n    const receiverId = (receiverUserIds[0] === giverId) ? receiverUserIds.pop() : receiverUserIds.shift();\n    pairings[giverId] = receiverId;\n  };\n  return pairings;\n}\n","import fetchUsers from '../api/usersAPI';\nimport * as types from './actionTypes';\nimport { groupUsers, makeRandomPairings, getDepartments } from './helpers';\n\nexport const loadUsers = () => (dispatch, getState) => {\n  return fetchUsers().then(usersServerData => {\n    const regroupedUsers = groupUsers(usersServerData.users);\n    const departments = getDepartments(usersServerData.users);\n    dispatch(loadUsersSuccess(regroupedUsers, departments));\n    dispatch(selectCity(getState().filter.selectedCity));\n  }).catch(error => {\n    throw(error);\n  })\n};\n\nconst loadUsersSuccess = (users, departments) => (\n  {\n    type: types.LOAD_USERS_SUCCESS,\n    users,\n    departments\n  }\n);\n\nexport const selectCity = city => (dispatch, getState) => { \n  const newFilter = {\n    ...getState().filter,\n    selectedCity: city,\n  };\n  dispatch(makePairings(getState().users[city], newFilter));\n  dispatch({\n    type: types.UPDATE_FILTER,\n    filter: newFilter\n  });\n}\n\nexport const changeDeptSelection = department => (dispatch, getState) => { \n  console.log('selected dept: ', department);\n  const state = getState();\n  const { selectedDepartments } = state.filter;\n  const newFilter = {\n  ...state.filter,\n    selectedDepartments: {...selectedDepartments, [department]: !selectedDepartments[department]}\n  };\n  console.log(\"new filter: \", newFilter);\n  const selectedCity = state.filter.selectedCity;\n  dispatch({\n    type: types.UPDATE_FILTER,\n    filter: newFilter\n  });\n  dispatch(makePairings(state.users[selectedCity], newFilter));\n  console.log(\"filter after: \", state.filter);\n\n}\n\nconst makePairings = (users, newFilter) => {\n  return {\n    type: types.MAKE_PAIRINGS,\n    pairings: makeRandomPairings(users, newFilter)\n  };\n}\n","import styled, { css } from \"styled-components\";\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  mobile: 576,\n}\n\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `\n  return acc\n}, {})\n\nexport const BarSection = styled.div`\n  box-sizing: border-box;\n  font-size: 1rem;\n  margin-bottom: 1rem;\n  ${media.mobile`\n    background-color: white;\n    padding: .75rem 2rem;\n    font-size: 3rem;\n    border: 1px solid DarkGray;\n  `}\n`;\n\nexport const MainSection = styled(BarSection)`\n  background-color: white;\n  border: 1px solid DimGray;\n  ${media.mobile`\n    background-color: LightGray;\n    font-size: 1.25rem;\n  `}\n`;\n\nexport const SectionContainer = styled.div`\n  box-sizing: border-box;\n  background-color: DimGray;\n  color: white;\n  padding: 1rem 4rem;\n  border: 1px solid DarkGray;\n  ${media.mobile`\n    padding: 1.5rem 1.5rem;\n    font-size: 1.75rem;\n  `}\n`;","import React from \"react\";\nimport { SectionContainer, BarSection as Header } from \"../pageSection.styles\";\n\nconst HeaderSection = ({title, selectedCity}) => {\n  return (\n    <Header>\n      <SectionContainer>{`${title} (${selectedCity})`}</SectionContainer>\n    </Header>\n  );\n}\n\nexport default HeaderSection;\n","import HeaderSection from './Header.connect';\nexport default HeaderSection;","import HeaderSection from \"./Header.component\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    selectedCity: state.filter.selectedCity\n  }\n}\n\nexport default connect(mapStateToProps)(HeaderSection);","import styled from \"styled-components\";\nimport { BarSection, media , SectionContainer as SharedSectionContainer} from \"../pageSection.styles\";\n\nexport const Toolbar = styled(BarSection)`\n\n  ${media.mobile`\n    position: fixed;\n    bottom: 0;\n    margin: 0;\n    width: 100%;\n  `}\n`;\n\nexport const SelectLabel = styled.span`\n  //font-size: 1rem;\n  margin-right: 5px;\n`;\n\nexport const Filter = styled.span`\n  margin-right: .5rem;\n  font-size: .75rem;\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const SectionContainer = styled(SharedSectionContainer)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;","import React from \"react\";\nimport { Toolbar, SelectLabel, SectionContainer, Filter } from \"./Toolbar.styles\";\n\nclass ToolbarSection extends React.Component {\n  onCityChange = ({ target: { value }}) => {\n    this.props.selectCity(value);\n  };\n\n  handleFilterDept = ({ target: { value }})=> {\n    console.log(\"handle dept: \", value);\n    this.props.changeDeptSelection(value);\n  }\n\n  renderSelectOption = city => (\n    <option key={city} value={city}>{city}</option>\n  );\n\n  renderCheckbox = dept => {\n    const selected = this.props.departments[dept];\n    return (\n      <Filter key={dept}>\n        <input type=\"checkbox\" value={dept} checked={selected} onChange={this.handleFilterDept}/>\n        {dept}\n      </Filter>\n    );\n    }\n\n  render = () => (\n    <Toolbar>\n      <SectionContainer>\n        <SelectLabel>FILTER: </SelectLabel>\n        <Filter>\n          <select onChange={this.onCityChange} value={this.props.selectedCity}>\n            {this.props.cities.map(this.renderSelectOption)}\n          </select>\n        </Filter>\n        {Object.keys(this.props.departments).map(this.renderCheckbox)}\n      </SectionContainer>\n    </Toolbar>\n  );\n}\n\nexport default ToolbarSection;","import ToolbarSection from './Toolbar.connect';\nexport default ToolbarSection;","import ToolbarSection from \"./Toolbar.component\";\nimport {connect} from 'react-redux';\nimport {selectCity, changeDeptSelection} from \"../../../../../actions\";\nimport {bindActionCreators} from 'redux';\n\nconst mapStateToProps = state => {\n  return {\n    cities: Object.keys(state.users),\n    selectedCity: state.filter.selectedCity,\n    departments: state.filter.selectedDepartments\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({selectCity, changeDeptSelection}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolbarSection);","import styled from \"styled-components\";\nimport { media } from '../common/pageSection.styles'\n\nexport const Block = styled.div`\n  border: 1px solid DimGray;\n  margin-bottom: 1rem;\n  background-color: #E6E6E6;\n  color: black;\n  padding: 1rem 1.5rem;\n  font-size: .75rem;\n  width: 42%;\n  min-height: 100px;\n  \n  ${media.tablet`\n  width: 38%;\n`}\n  ${media.mobile`\n    width: 100%;\n    min-height: 0;\n  `}\n`;\n\nexport const Divider = styled.div`\n  border: 1px solid DarkGray;\n  margin-top: .5rem;\n  margin-bottom: .5rem;\n`;\n\nexport const Name = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n`;","import PairingBlock from \"./PairingBlock.component\";\nexport default PairingBlock;","import React from \"react\";\nimport { Block, Divider, Name } from \"./PairingBlock.styles\";\n\nconst PairingBlock = ({giverInfo, receiverInfo}) => {\n  const getName = ({first, last}) => (\n    <div>{first} {last}</div>  \n  );\n\n  return (\n    <Block>\n      <div>\n        GIVER: <Name>{getName(giverInfo.name)}</Name>\n      </div>\n      <Divider />\n      <div>\n        RECEIVER: <Name>{getName(receiverInfo.name)}</Name>\n      </div>\n    </Block>\n  );\n}\n\nexport default PairingBlock;","import styled from \"styled-components\";\nimport {  MainSection as SharedMainSection, SectionContainer as SharedSectionContainer, media} from '../common/pageSection.styles';\n\n\nexport const MainSection = styled(SharedMainSection)`\n  padding: 3rem 4rem 0rem;\n  border: none;\n\n  ${media.mobile `\n    background: LightGray;\n    border: none;\n    padding-top: 0rem;\n  `}\n\n`;\n\n\nexport const SectionContainer = styled(SharedSectionContainer)`\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-content: flex-start;\n  width: 100%;\n  padding: 0;\n  border: none;\n  margin: 0;\n  ${media.mobile `\n    padding: 2px;\n    padding-bottom: 100px;\n    background-color: LightGray;\n    border: none;\n`}\n`;\n","import React from \"react\";\nimport PairingBlock from \"../PairingBlock\";\nimport { MainSection, SectionContainer } from \"./PairingsList.styles\";\n\nclass PairingsList extends React.Component {\n\n  renderPair = pair => {\n    const { users } = this.props;\n    const giverInfo = users[pair[0]];\n    const receiverInfo = users[pair[1]];\n    return <PairingBlock key={giverInfo.phone} giverInfo={giverInfo} receiverInfo={receiverInfo} />\n  }\n\n  render() {\n    const { pairings } = this.props;\n    return (\n      <MainSection>\n        {\n          !pairings \n          ? <SectionContainer>Loading Pairings</SectionContainer>\n          : <SectionContainer>{Object.entries(pairings).map(this.renderPair)}</SectionContainer>\n        }\n      </MainSection>\n    );\n  }\n};\n\nexport default PairingsList;","import ConnectedPairingsList from \"./PairingsList.connect\";\nexport default ConnectedPairingsList;","import PairingsList from \"./PairingsList.component\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users[state.filter.selectedCity],\n    pairings: state.pairings\n  }\n}\n\nexport default connect(mapStateToProps)(PairingsList);","import HomePage from './HomePage.component';\n\nexport default HomePage;\n","import React from 'react';\nimport HeaderSection from \"../pageSections/common/Header\";\nimport ToolbarSection from \"../pageSections/common/Toolbar\";\nimport Pairingslist from \"../pageSections/PairingsList\";\n\nconst HomePage = (props) => {\n  return (\n    <div>\n      <HeaderSection title=\"COFFEE WEEK\"/>\n      <ToolbarSection />\n      <Pairingslist />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(\"Uncaught Error: \", error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\nimport \"typeface-roboto\";\nimport { media } from '../pages/pageSections/common/pageSection.styles';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: Roboto, sans-serif;\n    font-weight: 350;\n    background: white;\n\n    ${media.mobile`\n      background-color: LightGray;\n    `}\n  }\n`\nexport default GlobalStyle;\n","import React from 'react';\nimport configureStore from \"../../store/configureStore\";\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Route } from 'react-router';\nimport { loadUsers } from '../../actions';\nimport HomePage from '../pages/HomePage';\nimport ErrorBoundary from '../pages/ErrorBoundaryPage';\nimport GlobalStyle from './App.style';\n\nconst store = configureStore();\nstore.dispatch(loadUsers());\n\nconst App = () => (\n  <ErrorBoundary>\n    <GlobalStyle />\n    <Provider store={store}>\n      <BrowserRouter>\n        <Route exact path=\"/\" component = {HomePage} />\n      </BrowserRouter>\n    </Provider>\n  </ErrorBoundary>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}