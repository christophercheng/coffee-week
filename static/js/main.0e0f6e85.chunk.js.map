{"version":3,"sources":["reducers/initialState.js","reducers/usersReducer.js","actions/actionTypes.js","reducers/pairingsReducer.js","reducers/filterReducer.js","reducers/rootReducer.js","store/configureStore.js","api/usersAPI.js","actions/helpers.js","actions/index.js","components/pages/pageSections/common/pageSection.styles.js","components/pages/pageSections/common/Header/Header.component.js","components/pages/pageSections/common/Header/index.js","components/pages/pageSections/common/Header/Header.connect.js","components/pages/pageSections/common/Toolbar/Toolbar.styles.js","components/pages/pageSections/common/Toolbar/Toolbar.component.js","components/pages/pageSections/common/Toolbar/index.js","components/pages/pageSections/common/Toolbar/Toolbar.connect.js","components/pages/pageSections/PairingBlock/PairingBlock.styles.js","components/pages/pageSections/PairingBlock/index.js","components/pages/pageSections/PairingBlock/PairingBlock.component.js","components/pages/pageSections/PairingsList/PairingsList.styles.js","components/pages/pageSections/PairingsList/PairingsList.component.js","components/pages/pageSections/PairingsList/index.js","components/pages/pageSections/PairingsList/PairingsList.connect.js","components/pages/HomePage/index.js","components/pages/HomePage/HomePage.component.js","components/pages/ErrorBoundaryPage/index.js","components/App/App.style.js","components/App/index.js","serviceWorker.js","index.js"],"names":["initialState","users","pairings","filter","location","department","usersReducer","state","arguments","length","undefined","action","type","pairingsReducer","filterReducer","Object","objectSpread","filterOptions","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","configureStore","createStore","applyMiddleware","thunk","fetchUsers","locationParam","concat","fetch","then","response","json","catch","error","getFirstSelected","options","selectedOption","keys","some","option","makeRandomPairings","giverUserIds","storeFilter","locationFilter","departmentFilter","selectedCity","guid","_users$guid","applyFilters","receiverUserIds","toConsumableArray","sort","a","b","Math","random","giverId","shift","receiverId","pop","loadUsersSuccess","selectCity","dispatch","getState","newFilter","forEach","makePairings","changeDeptSelection","selectedDepartment","defineProperty","sizes","desktop","tablet","mobile","media","reduce","acc","label","css","_templateObject","apply","BarSection","styled","div","_templateObject2","_templateObject3","MainSection","_templateObject4","_templateObject5","SectionContainer","_templateObject6","_templateObject7","HeaderSection","_ref","title","react_default","createElement","connect","Toolbar","Toolbar_styles_templateObject","Toolbar_styles_templateObject2","SelectLabel","span","Toolbar_styles_templateObject3","Filter","Toolbar_styles_templateObject4","SharedSectionContainer","Toolbar_styles_templateObject5","ToolbarSection","onCityChange","value","target","_this","props","onDeptChange","_ref2","renderSelectOption","key","renderCheckbox","dept","selected","checked","onChange","render","Toolbar_styles_SectionContainer","map","React","Component","_state$filter","bindActionCreators","Block","PairingBlock_styles_templateObject","PairingBlock_styles_templateObject2","PairingBlock_styles_templateObject3","Divider","PairingBlock_styles_templateObject4","Name","PairingBlock_styles_templateObject5","PairingBlock","giverInfo","receiverInfo","getName","first","last","name","SharedMainSection","PairingsList_styles_templateObject","PairingsList_styles_templateObject2","PairingsList_styles_templateObject3","PairingsList_styles_templateObject4","PairingsList","renderPair","pair","pageSections_PairingBlock","phone","this","PairingsList_styles_MainSection","PairingsList_styles_SectionContainer","entries","ConnectedPairingsList","HomePage","Header","common_Toolbar","pageSections_PairingsList","ErrorBoundary","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","hasError","info","console","log","children","GlobalStyle","createGlobalStyle","App_style_templateObject","reset","App_style_templateObject2","store","usersServerData","regroupedUsers","groupedUsers","user","rest","objectWithoutProperties","groupByGuid","populateFilterOptions","App","ErrorBoundaryPage","App_style","react_redux_es","pages_HomePage","Boolean","hostname","match","ReactDOM","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6MAAeA,EAAA,CACbC,MAAO,GACPC,SAAU,GACVC,OAAQ,CACNC,SAAU,GACVC,WAAY,KCODC,EATM,WAAwC,IAAvCC,EAAuCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/BR,EAAaC,MAAOU,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAOC,MACb,ICL8B,qBDM5B,OAAOD,EAAOV,MAChB,QACE,OAAOM,IEIEM,EATS,WAA2C,IAA1CN,EAA0CC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlCR,EAAaE,SAAUS,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjE,OAAQC,EAAOC,MACb,IDJyB,gBCKvB,OAAOD,EAAOT,SAChB,QACE,OAAOK,YCSEO,EAdO,WAAyC,IAAxCP,EAAwCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhCR,EAAaG,OAAQQ,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOC,MACb,IFHwB,gBEItB,OAAOD,EAAOR,OAChB,IFP8B,qBEQ5B,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACFR,EACAI,EAAOM,eAEd,QACE,OAAOV,ICFEW,EANKC,YAAgB,CAClClB,QACAC,WACAC,mBCJIiB,EAAmBC,OAAOC,sCAAwCC,IAMzDC,EALQ,kBAAMC,YAC3BP,EAAmCE,EAC/BM,YAAgBC,uBCCPC,EARI,SAAAxB,GACjB,IAAMyB,EAAgBzB,EAAQ,aAAA0B,OAAgB1B,GAAhB,GAE9B,OAAO2B,MADU,8EAAgFF,GAE9FG,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BC,MAAM,SAAAC,GAAK,OAAIA,qBCiBPC,EAAmB,SAAAC,GAC9B,IAAIC,EAAiB,GASrB,OARID,GACFvB,OAAOyB,KAAKF,GAASG,KAAK,SAAAC,GACxB,QAAIJ,EAAQI,KACVH,EAAiBG,GACV,KAINH,GAYII,EAAqB,SAAC1C,EAAOE,GAIxC,IAHA,IAAMD,EAAW,GACX0C,EAXa,SAAC3C,EAAO4C,GAAgB,IACzBC,EAAiDD,EAA3DzC,SAAsC2C,EAAqBF,EAAjCxC,WAC5B2C,EAAeX,EAAiBS,GACtC,OAAO/B,OAAOyB,KAAKvC,GAAOE,OAAO,SAAA8C,GAAQ,IAAAC,EACNjD,EAAMgD,GAA/B7C,EAD+B8C,EAC/B9C,SAAUC,EADqB6C,EACrB7C,WAClB,OAAQ2C,IAAiB5C,GAAY2C,EAAiB1C,KAMnC8C,CAAalD,EAAOE,GACnCiD,EAAkBrC,OAAAsC,EAAA,EAAAtC,CAAI6B,GAAcU,KAAK,SAACC,EAAEC,GAAH,MAAS,GAAKC,KAAKC,WAC3Dd,EAAanC,QAAQ,CAC1B,IAAMkD,EAAUf,EAAagB,QACvBC,EAAcT,EAAgB,KAAOO,EAAWP,EAAgBU,MAAQV,EAAgBQ,QAC9F1D,EAASyD,GAAWE,EAEtB,OAAO3D,GCnCH6D,EAAmB,SAAC9D,EAAOgB,GAAR,MACvB,CACEL,KPpB8B,qBOqB9BX,QACAgB,kBAIS+C,EAAa,SAAAhB,GAAY,OAAI,SAACiB,EAAUC,GACnD,IAAMC,EAAYD,IAAW/D,OAE7BY,OAAOyB,KAAK2B,EAAU/D,UAAUgE,QAAQ,SAAAhE,GAAQ,OAAI+D,EAAU/D,SAASA,GAAaA,IAAY4C,IAChGiB,EAASI,EAAaH,IAAWjE,MAAOkE,IACxCF,EAAS,CACPrD,KP9BwB,gBO+BxBT,OAAQgE,MAICG,EAAsB,SAAAC,GAAkB,OAAI,SAACN,EAAUC,GAClE,IAAM3D,EAAQ2D,IACN7D,EAAeE,EAAMJ,OAArBE,WAEF8D,EAASpD,OAAAC,EAAA,EAAAD,CAAA,GACVR,EAAMJ,OADI,CAEbE,WAAWU,OAAAC,EAAA,EAAAD,CAAA,GAAKV,EAANU,OAAAyD,EAAA,EAAAzD,CAAA,GAAmBwD,GAAsBlE,EAAWkE,OAEhEN,EAAS,CACPrD,KP5CwB,gBO6CxBT,OAAQgE,IAEVF,EAASI,EAAa9D,EAAMN,MAAOkE,MAI/BE,EAAe,SAACpE,EAAOkE,GAC3B,MAAO,CACLvD,KPtDyB,gBOuDzBV,SAAUyC,EAAmB1C,EAAOkE,sjCCtDxC,IAAMM,EAAQ,CACZC,QAAS,IACTC,OAAQ,IACRC,OAAQ,KAIGC,EAAQ9D,OAAOyB,KAAKiC,GAAOK,OAAO,SAACC,EAAKC,GAMnD,OALAD,EAAIC,GAAS,kBAAaC,cAAbC,IACUT,EAAMO,GAAS,GAChCC,MAAGE,WAAH,EAAA3E,aAGCuE,GACN,IAEUK,EAAaC,UAAOC,IAAVC,IAInBV,EAAMD,OAJaY,MAYVC,EAAcJ,kBAAOD,EAAPC,CAAHK,IAGpBb,EAAMD,OAHce,MASXC,EAAmBP,UAAOC,IAAVO,IAMzBhB,EAAMD,OANmBkB,MC5BdC,EARO,SAAAC,GAA2B,IAAzBC,EAAyBD,EAAzBC,MAAOjD,EAAkBgD,EAAlBhD,aAC7B,OACEkD,EAAA3C,EAAA4C,cAACf,EAAD,KACEc,EAAA3C,EAAA4C,cAACP,EAAD,QAAA9D,OAAsBmE,EAAtB,MAAAnE,OAAgCkB,EAAhC,QCLS+C,ECUAK,YANS,SAAA7F,GACtB,MAAO,CACLyC,aAAcX,EAAiB9B,EAAMJ,OAAOC,YAIjCgG,CAAyBL,spBCRjC,IAAMM,EAAUhB,kBAAOD,EAAPC,CAAHiB,IAEhBzB,EAAMD,OAFU2B,MAUPC,GAAcnB,UAAOoB,KAAVC,KAKXC,GAAStB,UAAOoB,KAAVG,KAONhB,GAAmBP,kBAAOwB,EAAPxB,CAAHyB,KCgBdC,8MArCbC,aAAe,SAAAhB,GAA0B,IAAbiB,EAAajB,EAAvBkB,OAAUD,MAC1BE,EAAKC,MAAMpD,WAAWiD,MAGxBI,aAAe,SAAAC,GAAyB,IAAZL,EAAYK,EAAtBJ,OAAUD,MAC1BE,EAAKC,MAAM9C,oBAAoB2C,MAGjCM,mBAAqB,SAAAnH,GAAQ,OAC3B8F,EAAA3C,EAAA4C,cAAA,UAAQqB,IAAKpH,EAAU6G,MAAO7G,GAAWA,MAG3CqH,eAAiB,SAAAC,GACf,IAAMC,EAAWR,EAAKC,MAAMrE,iBAAiB2E,GAC7C,OACExB,EAAA3C,EAAA4C,cAACQ,GAAD,CAAQa,IAAKE,GACXxB,EAAA3C,EAAA4C,cAAA,SAAOvF,KAAK,WAAWqG,MAAOS,EAAME,QAASD,EAAUE,SAAUV,EAAKE,eACrEK,MAKPI,OAAS,kBACP5B,EAAA3C,EAAA4C,cAACE,EAAD,KACEH,EAAA3C,EAAA4C,cAAC4B,GAAD,KACE7B,EAAA3C,EAAA4C,cAACK,GAAD,iBACAN,EAAA3C,EAAA4C,cAACQ,GAAD,KACET,EAAA3C,EAAA4C,cAAA,UAAQ0B,SAAUV,EAAKH,aAAcC,MAAOE,EAAKC,MAAMpE,cACpDjC,OAAOyB,KAAK2E,EAAKC,MAAMtE,gBAAgBkF,IAAIb,EAAKI,sBAGpDxG,OAAOyB,KAAK2E,EAAKC,MAAMrE,kBAAkBiF,IAAIb,EAAKM,gDAhC9BQ,IAAMC,WCFpBnB,GCkBAX,YAbS,SAAA7F,GAAS,IAAA4H,EACC5H,EAAMJ,OAA/BE,EADwB8H,EACxB9H,WAAYD,EADY+H,EACZ/H,SACnB,MAAO,CACL0C,eAAgB1C,EAChB4C,aAAcX,EAAiBjC,GAC/B2C,iBAAkB1C,IAIK,SAAA4D,GACzB,OAAOmE,YAAmB,CAACpE,aAAYM,uBAAsBL,IAGhDmC,CAA6CW,wvBChBrD,IAAMsB,GAAQhD,UAAOC,IAAVgD,KAUdzD,EAAMF,OAVQ4D,MAad1D,EAAMD,OAbQ4D,OAmBLC,GAAUpD,UAAOC,IAAVoD,MAMPC,GAAOtD,UAAOoB,KAAVmC,MC3BFC,GCEM,SAAA7C,GAA+B,IAA7B8C,EAA6B9C,EAA7B8C,UAAWC,EAAkB/C,EAAlB+C,aAC1BC,EAAU,SAAA1B,GAAA,IAAE2B,EAAF3B,EAAE2B,MAAOC,EAAT5B,EAAS4B,KAAT,OACdhD,EAAA3C,EAAA4C,cAAA,WAAM8C,EAAN,IAAcC,IAGhB,OACEhD,EAAA3C,EAAA4C,cAACkC,GAAD,KACEnC,EAAA3C,EAAA4C,cAAA,qBACSD,EAAA3C,EAAA4C,cAACwC,GAAD,KAAOK,EAAQF,EAAUK,QAElCjD,EAAA3C,EAAA4C,cAACsC,GAAD,MACAvC,EAAA3C,EAAA4C,cAAA,wBACYD,EAAA3C,EAAA4C,cAACwC,GAAD,KAAOK,EAAQD,EAAaI,2tBCXvC,IAAM1D,GAAcJ,kBAAO+D,EAAP/D,CAAHgE,KAIpBxE,EAAMD,OAJc0E,OAaX1D,GAAmBP,kBAAOwB,EAAPxB,CAAHkE,KAUzB1E,EAAMD,OAVmB4E,OCUdC,8MArBbC,WAAa,SAAAC,GAAQ,IACX1J,EAAUkH,EAAKC,MAAfnH,MACF6I,EAAY7I,EAAM0J,EAAK,IACvBZ,EAAe9I,EAAM0J,EAAK,IAChC,OAAOzD,EAAA3C,EAAA4C,cAACyD,GAAD,CAAcpC,IAAKsB,EAAUe,MAAOf,UAAWA,EAAWC,aAAcA,8EAGxE,IACC7I,EAAa4J,KAAK1C,MAAlBlH,SACR,OACEgG,EAAA3C,EAAA4C,cAAC4D,GAAD,KAEK7J,EAECgG,EAAA3C,EAAA4C,cAAC6D,GAAD,KAAmBjJ,OAAOkJ,QAAQ/J,GAAU8H,IAAI8B,KAAKJ,aADrDxD,EAAA3C,EAAA4C,cAAC6D,GAAD,iCAfe/B,IAAMC,WCHlBgC,GCSA9D,YAPS,SAAA7F,GACtB,MAAO,CACLN,MAAOM,EAAMN,MACbC,SAAUK,EAAML,WAILkG,CAAyBqD,ICRzBU,GCGE,SAAC/C,GAChB,OACElB,EAAA3C,EAAA4C,cAAA,WACED,EAAA3C,EAAA4C,cAACiE,EAAD,CAAenE,MAAM,gBACrBC,EAAA3C,EAAA4C,cAACkE,GAAD,MACAnE,EAAA3C,EAAA4C,cAACmE,GAAD,QCkBSC,eAzBb,SAAAA,EAAYnD,GAAO,IAAAD,EAAA,OAAApG,OAAAyJ,EAAA,EAAAzJ,CAAA+I,KAAAS,IACjBpD,EAAApG,OAAA0J,EAAA,EAAA1J,CAAA+I,KAAA/I,OAAA2J,EAAA,EAAA3J,CAAAwJ,GAAAI,KAAAb,KAAM1C,KACD7G,MAAQ,CAAEqK,UAAU,GAFRzD,kFAUD/E,EAAOyI,GAEvBC,QAAQC,IAAI,mBAAoB3I,EAAOyI,oCAIvC,OAAIf,KAAKvJ,MAAMqK,SAEN1E,EAAA3C,EAAA4C,cAAA,mCAGF2D,KAAK1C,MAAM4D,4DAhBY5I,GAE9B,MAAO,CAAEwI,UAAU,UARK3C,IAAMC,wXCGlC,IAee+C,GAfKC,4BAAHC,KACbC,KASEvG,EAAMD,OAVKyG,OCGXC,GAAQ9J,IACd8J,GAAMrH,SpBL6B,SAAAA,GACjC,OAAOrC,IAAaI,KAAK,SAAAuJ,GACvB,IAAMC,EDNiB,SAAAvL,GACzB,IAAMwL,EAAe,GAKrB,OAJAxL,EAAMmE,QAAQ,SAAAsH,GAAQ,IACbzI,EAAiByI,EAAjBzI,KAAS0I,EADI5K,OAAA6K,EAAA,EAAA7K,CACI2K,EADJ,UAEpBD,EAAaxI,GAAQ0I,IAEhBF,ECAkBI,CAAYN,EAAgBtL,OAE7CgB,EDC2B,SAAChB,EAAOqC,GAC3C,IAAMrB,EAAgB,GAStB,OARAqB,EAAQ8B,QAAQ,SAAA1B,GAAM,OAAIzB,EAAcyB,GAAU,KAClDzC,EAAMmE,QAAQ,SAAAsH,GACZpJ,EAAQ8B,QAAQ,SAAA1B,GACRgJ,EAAKhJ,KAAWzB,EAAcyB,KAClCzB,EAAcyB,GAAQgJ,EAAKhJ,KAAS,OAInCzB,ECXiB6K,CAAsBP,EAAgBtL,MAAO,CAAC,WAAY,eAChFgE,EAASF,EAAiByH,EAAgBvK,IAC1CgD,EAASD,EAAW,OACpBC,EAASK,EAAoB,kBAC5BnC,MAAM,SAAAC,GACP,MAAMA,MoBFV,IASe2J,GATH,kBACV7F,EAAA3C,EAAA4C,cAAC6F,GAAD,KACE9F,EAAA3C,EAAA4C,cAAC8F,GAAD,MACA/F,EAAA3C,EAAA4C,cAAC+F,EAAA,EAAD,CAAUZ,MAAOA,IACfpF,EAAA3C,EAAA4C,cAACgG,GAAD,SCHcC,QACW,cAA7B/K,OAAOjB,SAASiM,UAEe,UAA7BhL,OAAOjB,SAASiM,UAEhBhL,OAAOjB,SAASiM,SAASC,MACvB,2DCZNC,IAASzE,OAAO5B,EAAA3C,EAAA4C,cAACqG,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM7K,KAAK,SAAA8K,GACjCA,EAAaC","file":"static/js/main.0e0f6e85.chunk.js","sourcesContent":["export default {\n  users: {},\n  pairings: {},\n  filter: {\n    location: {},\n    department: {}\n  }\n}\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst usersReducer = (state = initialState.users, action) => {\n  switch (action.type) {\n    case types.LOAD_USERS_SUCCESS:\n      return action.users;\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","export const LOAD_USERS_SUCCESS = \"LOAD_USERS_SUCCESS\";\nexport const MAKE_PAIRINGS = \"MAKE_PAIRINGS\";\nexport const UPDATE_FILTER= \"UPDATE_FILTER\";","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst pairingsReducer = (state = initialState.pairings, action) => {\n  switch (action.type) {\n    case types.MAKE_PAIRINGS:\n      return action.pairings\n    default:\n      return state;\n  }\n};\n\nexport default pairingsReducer;\n","import * as types from '../actions/actionTypes';\nimport initialState from './initialState';\n\nconst filterReducer = (state = initialState.filter, action) => {\n  switch (action.type) {\n    case types.UPDATE_FILTER:\n      return action.filter\n    case types.LOAD_USERS_SUCCESS:\n      return {\n        ...state,\n        ...action.filterOptions\n      }\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import {combineReducers} from 'redux';\nimport users from './usersReducer';\nimport pairings from './pairingsReducer';\nimport filter from './filterReducer';\n\nconst rootReducer = combineReducers({\n  users,\n  pairings,\n  filter\n});\n\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from 'redux';\nimport rootReducer from '../reducers/rootReducer';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst configureStore = () => createStore(\n  rootReducer, /* preloadedState, */ composeEnhancers(\n      applyMiddleware(thunk)\n    ));\n\nexport default configureStore;\n","const fetchUsers = location => {\n  const locationParam = location ? `?location=${location}` : ``;\n  const fetchUrl = 'https://hbc-frontend-challenge.hbccommon.private.hbc.com/coffee-week/users/' + locationParam;\n  return fetch(fetchUrl)\n    .then(response => response.json())\n    .catch(error => error);\n}\n\nexport default fetchUsers;","export const groupByGuid = users => {\n  const groupedUsers = {};\n  users.forEach(user => {\n    const {guid, ...rest} = user;\n    groupedUsers[guid] = rest;\n  });\n  return groupedUsers;\n};\n\nexport const populateFilterOptions = (users, options) => {\n  const filterOptions = {};\n  options.forEach(option => filterOptions[option] = {});\n  users.forEach(user => {\n    options.forEach(option => {\n      if (!(user[option] in filterOptions[option])) {\n        filterOptions[option][user[option]]=false;\n      }\n    });\n  });\n  return filterOptions;\n}\n\nexport const getFirstSelected = options => {\n  let selectedOption = \"\";\n  if (options) {\n    Object.keys(options).some(option => {\n      if (options[option]) {\n        selectedOption = option;\n        return true;\n      } return false;\n    });\n  }\n  return selectedOption;\n}\n\nconst applyFilters = (users, storeFilter) => {\n  const { location: locationFilter, department: departmentFilter } = storeFilter;\n  const selectedCity = getFirstSelected(locationFilter);\n  return Object.keys(users).filter(guid => {\n    const { location, department } = users[guid];\n    return (selectedCity === location && departmentFilter[department]);\n  });\n};\n\nexport const makeRandomPairings = (users, filter) => {\n  const pairings = {};\n  const giverUserIds = applyFilters(users, filter);\n  const receiverUserIds = [...giverUserIds].sort((a,b) => .5 - Math.random());\n  while (giverUserIds.length) {\n    const giverId = giverUserIds.shift();\n    const receiverId = (receiverUserIds[0] === giverId) ? receiverUserIds.pop() : receiverUserIds.shift();\n    pairings[giverId] = receiverId;\n  };\n  return pairings;\n}\n","import fetchUsers from '../api/usersAPI';\nimport * as types from './actionTypes';\nimport { groupByGuid, makeRandomPairings, populateFilterOptions} from './helpers';\n\nexport const initializeApp = () => dispatch => {\n  return fetchUsers().then(usersServerData => {\n    const regroupedUsers = groupByGuid(usersServerData.users);\n    // filterOptions = { location: {ny: false, dub: false}, department: {engineering: false, 'human resources': false} }\n    const filterOptions = populateFilterOptions(usersServerData.users, ['location', 'department']); \n    dispatch(loadUsersSuccess(regroupedUsers, filterOptions));\n    dispatch(selectCity('ny'));\n    dispatch(changeDeptSelection('engineering'));\n  }).catch(error => {\n    throw(error);\n  })\n};\n\n// put it in the store\nconst loadUsersSuccess = (users, filterOptions) => (\n  {\n    type: types.LOAD_USERS_SUCCESS,\n    users,\n    filterOptions\n  }\n);\n\nexport const selectCity = selectedCity => (dispatch, getState) => { \n  const newFilter = getState().filter;\n  // mark selectedCity as true in the location filter, set all other cities as false\n  Object.keys(newFilter.location).forEach(location => newFilter.location[location] = (location ===selectedCity) ? true : false);\n  dispatch(makePairings(getState().users, newFilter));\n  dispatch({\n    type: types.UPDATE_FILTER,\n    filter: newFilter\n  });\n}\n\nexport const changeDeptSelection = selectedDepartment => (dispatch, getState) => { \n  const state = getState();\n  const { department } = state.filter;\n  // change the filter value of the selected department\n  const newFilter = {\n    ...state.filter,\n    department: {...department, [selectedDepartment]: !department[selectedDepartment]}\n  };\n  dispatch({\n    type: types.UPDATE_FILTER,\n    filter: newFilter\n  });\n  dispatch(makePairings(state.users, newFilter));\n}\n\n// generate pairings based on given filter to display in current view\nconst makePairings = (users, newFilter) => {\n  return {\n    type: types.MAKE_PAIRINGS,\n    pairings: makeRandomPairings(users, newFilter)\n  };\n}\n","import styled, { css } from \"styled-components\";\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  mobile: 576,\n}\n\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `\n  return acc\n}, {})\n\nexport const BarSection = styled.div`\n  box-sizing: border-box;\n  font-size: 1rem;\n  margin-bottom: 1rem;\n  ${media.mobile`\n    background-color: white;\n    padding: .75rem 2rem;\n    font-size: 3rem;\n    border: 1px solid DarkGray;\n  `}\n`;\n\nexport const MainSection = styled(BarSection)`\n  background-color: white;\n  border: 1px solid DimGray;\n  ${media.mobile`\n    background-color: LightGray;\n    font-size: 1.25rem;\n  `}\n`;\n\nexport const SectionContainer = styled.div`\n  box-sizing: border-box;\n  background-color: DimGray;\n  color: white;\n  padding: 1rem 4rem;\n  border: 1px solid DarkGray;\n  ${media.mobile`\n    padding: 1.5rem 1.5rem;\n    font-size: 1.75rem;\n  `}\n`;","import React from \"react\";\nimport { SectionContainer, BarSection as Header } from \"../pageSection.styles\";\n\nconst HeaderSection = ({title, selectedCity}) => {\n  return (\n    <Header>\n      <SectionContainer>{`${title} (${selectedCity})`}</SectionContainer>\n    </Header>\n  );\n}\n\nexport default HeaderSection;\n","import HeaderSection from './Header.connect';\nexport default HeaderSection;","import HeaderSection from \"./Header.component\";\nimport {connect} from 'react-redux';\nimport { getFirstSelected } from '../../../../../actions/helpers';\n\n\nconst mapStateToProps = state => {\n  return {\n    selectedCity: getFirstSelected(state.filter.location)\n  }\n}\n\nexport default connect(mapStateToProps)(HeaderSection);","import styled from \"styled-components\";\nimport { BarSection, media , SectionContainer as SharedSectionContainer} from \"../pageSection.styles\";\n\nexport const Toolbar = styled(BarSection)`\n\n  ${media.mobile`\n    position: fixed;\n    bottom: 0;\n    margin: 0;\n    width: 100%;\n  `}\n`;\n\nexport const SelectLabel = styled.span`\n  //font-size: 1rem;\n  margin-right: 5px;\n`;\n\nexport const Filter = styled.span`\n  margin-right: .5rem;\n  font-size: .75rem;\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nexport const SectionContainer = styled(SharedSectionContainer)`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;","import React from \"react\";\nimport { Toolbar, SelectLabel, SectionContainer, Filter } from \"./Toolbar.styles\";\n\nclass ToolbarSection extends React.Component {\n  onCityChange = ({ target: { value }}) => {\n    this.props.selectCity(value);\n  };\n\n  onDeptChange = ({ target: { value }})=> {\n    this.props.changeDeptSelection(value);\n  }\n\n  renderSelectOption = location => (\n    <option key={location} value={location}>{location}</option>\n  );\n\n  renderCheckbox = dept => {\n    const selected = this.props.departmentFilter[dept];\n    return (\n      <Filter key={dept}>\n        <input type=\"checkbox\" value={dept} checked={selected} onChange={this.onDeptChange}/>\n        {dept}\n      </Filter>\n    );\n    }\n\n  render = () => (\n    <Toolbar>\n      <SectionContainer>\n        <SelectLabel>FILTER: </SelectLabel>\n        <Filter>\n          <select onChange={this.onCityChange} value={this.props.selectedCity}>\n            {Object.keys(this.props.locationFilter).map(this.renderSelectOption)}\n          </select>\n        </Filter>\n        {Object.keys(this.props.departmentFilter).map(this.renderCheckbox)}\n      </SectionContainer>\n    </Toolbar>\n  );\n}\n\nexport default ToolbarSection;","import ToolbarSection from './Toolbar.connect';\nexport default ToolbarSection;","import ToolbarSection from \"./Toolbar.component\";\nimport {connect} from 'react-redux';\nimport {selectCity, changeDeptSelection} from \"../../../../../actions\";\nimport {bindActionCreators} from 'redux';\nimport { getFirstSelected } from '../../../../../actions/helpers';\n\nconst mapStateToProps = state => {\n  const {department, location } = state.filter;\n  return {\n    locationFilter: location,\n    selectedCity: getFirstSelected(location),\n    departmentFilter: department\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({selectCity, changeDeptSelection}, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToolbarSection);","import styled from \"styled-components\";\nimport { media } from '../common/pageSection.styles'\n\nexport const Block = styled.div`\n  border: 1px solid DimGray;\n  margin-bottom: 1rem;\n  background-color: #E6E6E6;\n  color: black;\n  padding: 1rem 1.5rem;\n  font-size: .75rem;\n  width: 42%;\n  min-height: 100px;\n  \n  ${media.tablet`\n  width: 38%;\n`}\n  ${media.mobile`\n    width: 100%;\n    min-height: 0;\n  `}\n`;\n\nexport const Divider = styled.div`\n  border: 1px solid DarkGray;\n  margin-top: .5rem;\n  margin-bottom: .5rem;\n`;\n\nexport const Name = styled.span`\n  display: inline-block;\n  font-size: 1rem;\n`;","import PairingBlock from \"./PairingBlock.component\";\nexport default PairingBlock;","import React from \"react\";\nimport { Block, Divider, Name } from \"./PairingBlock.styles\";\n\nconst PairingBlock = ({giverInfo, receiverInfo}) => {\n  const getName = ({first, last}) => (\n    <div>{first} {last}</div>  \n  );\n\n  return (\n    <Block>\n      <div>\n        GIVER: <Name>{getName(giverInfo.name)}</Name>\n      </div>\n      <Divider />\n      <div>\n        RECEIVER: <Name>{getName(receiverInfo.name)}</Name>\n      </div>\n    </Block>\n  );\n}\n\nexport default PairingBlock;","import styled from \"styled-components\";\nimport {  MainSection as SharedMainSection, SectionContainer as SharedSectionContainer, media} from '../common/pageSection.styles';\n\n\nexport const MainSection = styled(SharedMainSection)`\n  padding: 3rem 4rem 0rem;\n  border: none;\n\n  ${media.mobile `\n    background: LightGray;\n    border: none;\n    padding-top: 0rem;\n  `}\n\n`;\n\n\nexport const SectionContainer = styled(SharedSectionContainer)`\n  background-color: white;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  align-content: flex-start;\n  width: 100%;\n  padding: 0;\n  border: none;\n  margin: 0;\n  ${media.mobile `\n    padding: 2px;\n    padding-bottom: 100px;\n    background-color: LightGray;\n    border: none;\n`}\n`;\n","import React from \"react\";\nimport PairingBlock from \"../PairingBlock\";\nimport { MainSection, SectionContainer } from \"./PairingsList.styles\";\n\nclass PairingsList extends React.Component {\n\n  renderPair = pair => {\n    const { users } = this.props;\n    const giverInfo = users[pair[0]];\n    const receiverInfo = users[pair[1]];\n    return <PairingBlock key={giverInfo.phone} giverInfo={giverInfo} receiverInfo={receiverInfo} />\n  }\n\n  render() {\n    const { pairings } = this.props;\n    return (\n      <MainSection>\n        {\n          !pairings \n          ? <SectionContainer>Loading Pairings</SectionContainer>\n          : <SectionContainer>{Object.entries(pairings).map(this.renderPair)}</SectionContainer>\n        }\n      </MainSection>\n    );\n  }\n};\n\nexport default PairingsList;","import ConnectedPairingsList from \"./PairingsList.connect\";\nexport default ConnectedPairingsList;","import PairingsList from \"./PairingsList.component\";\nimport {connect} from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    users: state.users,\n    pairings: state.pairings\n  }\n}\n\nexport default connect(mapStateToProps)(PairingsList);","import HomePage from './HomePage.component';\n\nexport default HomePage;\n","import React from 'react';\nimport HeaderSection from \"../pageSections/common/Header\";\nimport ToolbarSection from \"../pageSections/common/Toolbar\";\nimport Pairingslist from \"../pageSections/PairingsList\";\n\nconst HomePage = (props) => {\n  return (\n    <div>\n      <HeaderSection title=\"COFFEE WEEK\"/>\n      <ToolbarSection />\n      <Pairingslist />\n    </div>\n  );\n}\n\nexport default HomePage;\n","import React from 'react';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, info) {\n    // You can also log the error to an error reporting service\n    console.log(\"Uncaught Error: \", error, info);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children; \n  }\n}\n\nexport default ErrorBoundary;\n","import { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\nimport \"typeface-roboto\";\nimport { media } from '../pages/pageSections/common/pageSection.styles';\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: Roboto, sans-serif;\n    font-weight: 350;\n    background: white;\n\n    ${media.mobile`\n      background-color: LightGray;\n    `}\n  }\n`\nexport default GlobalStyle;\n","import React from 'react';\nimport configureStore from \"../../store/configureStore\";\nimport { Provider } from 'react-redux';\nimport { initializeApp } from '../../actions';\nimport HomePage from '../pages/HomePage';\nimport ErrorBoundary from '../pages/ErrorBoundaryPage';\nimport GlobalStyle from './App.style';\n\nconst store = configureStore();\nstore.dispatch(initializeApp());\n\nconst App = () => (\n  <ErrorBoundary>\n    <GlobalStyle />\n    <Provider store={store}>\n      <HomePage />\n    </Provider>\n  </ErrorBoundary>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}